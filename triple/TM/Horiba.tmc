%{
  #define Horiba_channel(x,y) Horiba.channel[x].y
%}
TM typedef short Dilution_sccm { text "%6.1lf"; }
TM typedef short IonSource_sccm { text "%5.1lf"; }
TM typedef short Reagent_sccm { text "%5.3lf"; }
TM typedef short Zero_sccm { text "%6.1lf"; }
TM typedef unsigned short HoribaS_t { text "%04x"; }
TM typedef unsigned char HoribaSt_t { text "%3d"; }

TM 1 Hz Dilution_sccm Dilution_SP;
TM 1 Hz Dilution_sccm Dilution;
TM 1 Hz IonSource_sccm IonSource_SP;
TM 1 Hz IonSource_sccm IonSource;
TM 1 Hz Reagent_sccm Reagent_SP;
TM 1 Hz Reagent_sccm Reagent;
TM 1 Hz Zero_sccm Zero_SP;
TM 1 Hz Zero_sccm Zero;
TM 1 Hz HoribaS_t HoribaS;
TM 1 Hz HoribaSt_t Horiba_Stale;
TM "Receive" Horiba 1;

Group Horiba (Dilution_SP, Dilution, IonSource_SP, IonSource, Reagent_SP,
    Reagent, Zero_SP, Zero, HoribaS, Horiba_Stale) {
  Dilution_SP = Horiba_channel(0,SP) * 10*1000.;
  Dilution = Horiba_channel(0,RB) * 10*1000.;
  IonSource_SP = Horiba_channel(1,SP) * 10;
  IonSource = Horiba_channel(1,RB) * 10;
  Reagent_SP = Horiba_channel(2,SP) * 1000;
  Reagent = Horiba_channel(2,RB) * 1000;
  Zero_SP = Horiba_channel(3,SP) * 10;
  Zero = Horiba_channel(3,RB) * 10;
  HoribaS = Horiba.HoribaS;
  Horiba_Stale = Horiba_obj->stale(255);
  Horiba_obj->synch();
}
