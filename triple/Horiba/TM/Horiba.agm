Moduledef Horiba [ src= name=Horiba ] {
  Horiba Module requires a src variable
  Source file syntax:
    source_file : source_line+ .
    source_line :
      comment /
      'Name' word /
      'Rate' \d+ 'Hz' /
      'Port' path /
      'Data' word address unit format command [ rbscale [cmdscale]] .
    word : \w+ .
    address : \d+ .
    unit : \s+ .
    command : '"' \w+ [\s\w+]* '"' .
    rbscale : float .
    cmdscale : float .
  
  Each datum name and unit are combined to define a datum-specific
  TM typedef for an fixed point signed short. The format's precision
  defines the scale value by which the reported value is multiplied
  before being stored in the short. The value is also multiple by the
  scale factor if specified.
  
  If the command string is non-empty, a command is defined to define
  a set point for the channel. If a scale value is specified, the
  command value will be divided by the scale value before being
  written to the device.
}

mode (default,driver) {
  tmcbase = @name@.tmc:
  colbase = @name@_col.tmc:
  cmdbase = @name@.cmd:
  extbase = @name@_conv.tmc:
  genuibase = @name@.genui:
  SRC = @src@
  IGNORE = @name@.tmc @name@_col.tmc @name@.cmd @name@_conv.tmc
  IGNORE = @name@.genui @name@.tbl
  OBJ = @name@.tmc @name@_col.tmc @name@.cmd @name@_conv.tmc
  OBJ = @name@.genui @name@.tbl
  %%
@name@.tmc @name@_col.tmc @name@.cmd @name@_conv.tmc @name@.genui @name@.tbl : @src@ @MODDIR@/Horiba_gen
	@MODDIR@/Horiba_gen @src@ name=@name@
}

mode (driver) {
  DISTRIB = @MODDIR@/../horiba
  CPPFLAGS = -I @MODDIR@/..
  %%
.PHONY : clean-Horiba
@MODDIR@/../horiba :
	cd @MODDIR@/.. && make
clean-dist : clean-Horiba
clean-Horiba :
	cd @MODDIR@/.. && make clean
}
