%{
  #define TT_Start_text(x) ((x)?"Start":" Stop")
  #define TT_Speed_text(x) ((x)?" Low":"High")
  #define TT_YN_text(x) ((x)?"Yes":" No")
  #define TT_ClOp_text(x) ((x)?"Closed":"  Open")
  #define TT_VentOp_text(x) ((x)?" Cmd":"Auto")
  #define TT_Resp_text(x) ((x)?"Fail":"  OK")
%}
TM typedef unsigned char TT_Start_t { text "%5d" TT_Start_text(); }
TM typedef unsigned char TT_Speed_t { text "%4d" TT_Speed_text(); }
TM typedef unsigned char TT_YN_t { text "%3d" TT_YN_text(); }
TM typedef unsigned char TT_ClOp_t { text "%3d" TT_ClOp_text(); }
TM typedef unsigned char TT_VentOp_t { text "%4d" TT_VentOp_text(); }
TM typedef unsigned char TT_Resp_t { text "%4d" TT_Resp_text(); }

TT_Start_t TTA_Start; Invalidate TTA_Start;
  { TTA_Start = (TTA_flags >> 0) & 1; Validate TTA_Start; }
TT_Speed_t TTA_Speed; Invalidate TTA_Speed;
  { TTA_Speed = (TTA_flags >> 1) & 1; Validate TTA_Speed; }
TT_YN_t TTA_WtrCl; Invalidate TTA_WtrCl;
  { TTA_WtrCl = (TTA_flags >> 2) & 1; Validate TTA_WtrCl; }
TT_YN_t TTA_ActStp; Invalidate TTA_ActStp;
  { TTA_ActStp = (TTA_flags >> 3) & 1; Validate TTA_ActStp; }
TT_ClOp_t TTA_VentVlv; Invalidate TTA_VentVlv;
  { TTA_VentVlv = (TTA_flags >> 4) & 1; Validate TTA_VentVlv; }
TT_VentOp_t TTA_VentOp; Invalidate TTA_VentOp;
  { TTA_VentOp = (TTA_flags >> 5) & 1; Validate TTA_VentOp; }
TT_Resp_t TTA_Resp; Invalidate TTA_Resp;
  { TTA_Resp = (TTA_flags >> 7) & 1; Validate TTA_Resp; }

TT_Start_t TTB_Start; Invalidate TTB_Start;
  { TTB_Start = (TTB_flags >> 0) & 1; Validate TTB_Start; }
TT_Speed_t TTB_Speed; Invalidate TTB_Speed;
  { TTB_Speed = (TTB_flags >> 1) & 1; Validate TTB_Speed; }
TT_YN_t TTB_WtrCl; Invalidate TTB_WtrCl;
  { TTB_WtrCl = (TTB_flags >> 2) & 1; Validate TTB_WtrCl; }
TT_YN_t TTB_ActStp; Invalidate TTB_ActStp;
  { TTB_ActStp = (TTB_flags >> 3) & 1; Validate TTB_ActStp; }
TT_ClOp_t TTB_VentVlv; Invalidate TTB_VentVlv;
  { TTB_VentVlv = (TTB_flags >> 4) & 1; Validate TTB_VentVlv; }
TT_VentOp_t TTB_VentOp; Invalidate TTB_VentOp;
  { TTB_VentOp = (TTB_flags >> 5) & 1; Validate TTB_VentOp; }
TT_Resp_t TTB_Resp; Invalidate TTB_Resp;
  { TTB_Resp = (TTB_flags >> 7) & 1; Validate TTB_Resp; }
